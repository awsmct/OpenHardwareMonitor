<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>